### Action Workflow for CI pipeline
### Java Maven 
## comment for change
name: Build sample Java Maven project
 
on: 
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'
 
jobs:
  compile:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [11]
    name: Java ${{ matrix.java }} compile
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Running on the default branch.
        if: steps.branch-name.outputs.is_default == 'true'
        run: |
          echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on default: master".
      
      - name: Running on a pull request branch.
        if: steps.branch-name.outputs.is_default == 'false'
        run: |
          echo "Running on pr: ${{ steps.branch-name.outputs.current_branch }}"
        # Outputs: "Running on pr: feature/test".
      - name: Checkout Source Code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-package: jdk
          java-version: ${{ matrix.java }}
      - name: Compile the Project
        run: mvn -B compile 
  security:
    runs-on: ubuntu-latest
#    if: contains(fromJson('["pull_request"]'), github.event_name )|| (github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities (Monitor only)
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
      - name: Run Snyk to check for vulnerabilities (test)
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
  build_and_test:
    runs-on: ubuntu-latest
    needs: compile
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
    - name: Check working directory
      run: echo "${GITHUB_WORKSPACE}"
    - name: Build project with Maven
      run: | 
           mvn -B package --file pom.xml
           mkdir staging && cp target/*.jar staging/ 
    - name: Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=true test
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: JEST Tests            # Name of the check run which will be created
        path: target/surefire-reports/TEST-*.xml    # Path to test results
        reporter: java-junit       # Format of test results
        fail-on-error: 'false'